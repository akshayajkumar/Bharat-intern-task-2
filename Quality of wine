# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Generate a synthetic wine quality dataset
np.random.seed(0)
n_samples = 1000

# Simulate wine features (you can modify or add more features as needed)
alcohol = np.random.uniform(8, 15, n_samples)
acidity = np.random.uniform(4, 10, n_samples)
sugar = np.random.uniform(0, 50, n_samples)

# Simulate wine quality based on a linear equation with some noise
quality = 3 * alcohol + 2 * acidity - 1.5 * sugar + np.random.normal(0, 2, n_samples)

# Create a DataFrame
data = pd.DataFrame({'alcohol': alcohol, 'acidity': acidity, 'sugar': sugar, 'quality': quality})

# Define your features (X) and target variable (y)
X = data[['alcohol', 'acidity', 'sugar']]
y = data['quality']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)
